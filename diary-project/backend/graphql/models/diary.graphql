extend type Query {
    "Find a single user by an identifying attribute."
    diary(
      "Search by primary key."
      id: ID @eq

    ): Diary @find

    "List multiple users."
    diaries: [Diary!]! @paginate(defaultCount: 10)

    allDiaries:[Diary!]! @paginate(resolver:"App\\GraphQL\\Mutations\\DiaryResolver@index",defaultCount: 10)
}

extend type Mutation {
  post(input:DiaryInput! @spread):Diary @field(resolver:"App\\GraphQL\\Mutations\\DiaryResolver@post")
  deleteDiary(id: ID! @whereKey): Diary @delete
  updateDiary(input:UpdateDiaryInput! @spread):Diary @field(resolver:"App\\GraphQL\\Mutations\\DiaryResolver@update")
}


type Diary {
    id: ID!

    user: User! @belongsTo

    favorites: [Favorite!]! @hasMany(relation: "favorites")

    favoriteCount:Int @count(relation: "favorites")

    isFavorite:Boolean

    thumbnail: String

    title:String

    text:String

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    deleted_at: DateTime!
}

input DiaryInput{
    title: String! @rules(apply: ["required", "max:255"])
    text: String! @rules(apply: ["required"])
}

input UpdateDiaryInput{
    id:ID!
    title: String! @rules(apply: ["required", "max:255"])
    text: String! @rules(apply: ["required"])
}
